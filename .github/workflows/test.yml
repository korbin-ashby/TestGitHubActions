# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: testing

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Runs a set of commands using the runners shell
      - name: Create Artifact Files
        run: |
          mkdir testartifact
          mkdir testartifact/nestedDirectory
          touch testartifact/nestedDirectory/hello4.txt
          touch testartifact/hello.txt
          touch testartifact/hello2.txt
          echo "Hello" > testartifact/hello.txt
          echo "Hello" > testartifact/hello2.txt
          echo "Hello" > testartifact/nestedDirectory/hello4.txt

      - name: Zip Artifact Files
        run: |
          cd testartifact
          zip -r ../testartifact${{ github.run_id }}.zip .
        
      - name: Azure Login
        uses: Azure/login@v1.5.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID_ARTIFACTS }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID_ARTIFACTS }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_ARTIFACTS }}

      - name: Upload Artifact to Azure
        id: azure-upload-artifact
        run: |
          container_name="ghartifacts"
          storage_account="kashbystorageaccount"
          account_key="${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}"
          
          az storage blob upload --account-name $storage_account --container-name $container_name --name testartifact${{ github.run_id }}.zip --type block --content-type application/zip --account-key $account_key --file testartifact${{ github.run_id }}.zip

      # - name: Azure Upload
      #   uses: fixpoint/azblob-upload-artifact@v4
      #   with:
      #    connection-string: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      #    name: backend
      #    container: ghartifacts
      #    path: testartifact${{ github.run_id }}.zip

      - name: Upload Artifact to Github
        uses: actions/upload-artifact@v3.1.3
        with:
          name: testartifact
          path: testartifact
          
  downloadArtifacts:
    runs-on: windows-2019
    environment: testing
    permissions:
      id-token: write
      contents: read
    needs: [ build ]
    steps:

      - name: Azure Login
        uses: Azure/login@v1.5.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID_ARTIFACTS }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID_ARTIFACTS }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_ARTIFACTS }}
          enable-AzPSSession: true


      - name: Download 2nd Newest Azure Artifact
        id: download-azure-artifacts
        run: |
          $container_name="ghartifacts"
          $storage_account="kashbystorageaccount"
          $account_key="${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}"
          
          # List blobs in the container
          $artifacts=(az storage blob list --account-name $storage_account --account-key $account_key --container-name $container_name --query "[].name" --output tsv)

          # Sort artifacts by last modified time
          $sorted_artifacts=($artifacts | Sort-Object -Descending)

          # Extract the second newest artifact
          $second_newest_artifact=$sorted_artifacts[1]
          
          # Download the second newest artifact
          az storage blob download --account-name $storage_account --account-key $account_key --container-name $container_name --name $second_newest_artifact --file testartifact.zip


      - name: Extract Downloaded artifact
        shell: powershell
        run: |
          Expand-Archive -Path testartifact.zip -DestinationPath download
          Remove-Item testartifact.zip
          dir


      - name: echo downloaded files
        shell: powershell
        run: |
          cat download/hello.txt
          cat download/nestedDirectory/hello4.txt
